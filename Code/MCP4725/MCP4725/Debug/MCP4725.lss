
MCP4725.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005b4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000608  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000638  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000674  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000abf  00000000  00000000  000006fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006ba  00000000  00000000  000011bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000550  00000000  00000000  00001875  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000164  00000000  00000000  00001dc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040d  00000000  00000000  00001f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005e2  00000000  00000000  00002339  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  0000291b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 b7 00 	call	0x16e	; 0x16e <main>
  64:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <i2c_start_wait>:
	if (rawoutput > 4095)
		rawoutput = 4095;

	//write to chip
	mcp4725_setrawoutput(address, rawoutput, savetoeeprom);
}
  6c:	94 ea       	ldi	r25, 0xA4	; 164
  6e:	96 bf       	out	0x36, r25	; 54
  70:	06 b6       	in	r0, 0x36	; 54
  72:	07 fe       	sbrs	r0, 7
  74:	fd cf       	rjmp	.-6      	; 0x70 <i2c_start_wait+0x4>
  76:	91 b1       	in	r25, 0x01	; 1
  78:	98 7f       	andi	r25, 0xF8	; 248
  7a:	98 30       	cpi	r25, 0x08	; 8
  7c:	11 f0       	breq	.+4      	; 0x82 <i2c_start_wait+0x16>
  7e:	90 31       	cpi	r25, 0x10	; 16
  80:	a9 f7       	brne	.-22     	; 0x6c <i2c_start_wait>
  82:	83 b9       	out	0x03, r24	; 3
  84:	94 e8       	ldi	r25, 0x84	; 132
  86:	96 bf       	out	0x36, r25	; 54
  88:	06 b6       	in	r0, 0x36	; 54
  8a:	07 fe       	sbrs	r0, 7
  8c:	fd cf       	rjmp	.-6      	; 0x88 <i2c_start_wait+0x1c>
  8e:	91 b1       	in	r25, 0x01	; 1
  90:	98 7f       	andi	r25, 0xF8	; 248
  92:	90 32       	cpi	r25, 0x20	; 32
  94:	11 f0       	breq	.+4      	; 0x9a <i2c_start_wait+0x2e>
  96:	98 35       	cpi	r25, 0x58	; 88
  98:	31 f4       	brne	.+12     	; 0xa6 <i2c_start_wait+0x3a>
  9a:	94 e9       	ldi	r25, 0x94	; 148
  9c:	96 bf       	out	0x36, r25	; 54
  9e:	06 b6       	in	r0, 0x36	; 54
  a0:	04 fc       	sbrc	r0, 4
  a2:	fd cf       	rjmp	.-6      	; 0x9e <i2c_start_wait+0x32>
  a4:	e3 cf       	rjmp	.-58     	; 0x6c <i2c_start_wait>
  a6:	08 95       	ret

000000a8 <i2c_stop>:
  a8:	84 e9       	ldi	r24, 0x94	; 148
  aa:	86 bf       	out	0x36, r24	; 54
  ac:	06 b6       	in	r0, 0x36	; 54
  ae:	04 fc       	sbrc	r0, 4
  b0:	fd cf       	rjmp	.-6      	; 0xac <i2c_stop+0x4>
  b2:	08 95       	ret

000000b4 <i2c_write>:
  b4:	83 b9       	out	0x03, r24	; 3
  b6:	84 e8       	ldi	r24, 0x84	; 132
  b8:	86 bf       	out	0x36, r24	; 54
  ba:	06 b6       	in	r0, 0x36	; 54
  bc:	07 fe       	sbrs	r0, 7
  be:	fd cf       	rjmp	.-6      	; 0xba <i2c_write+0x6>
  c0:	81 b1       	in	r24, 0x01	; 1
  c2:	88 7f       	andi	r24, 0xF8	; 248
  c4:	88 32       	cpi	r24, 0x28	; 40
  c6:	11 f0       	breq	.+4      	; 0xcc <i2c_write+0x18>
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	08 95       	ret
  cc:	80 e0       	ldi	r24, 0x00	; 0
  ce:	08 95       	ret

000000d0 <mcp4725_init>:
  d0:	cf 93       	push	r28
  d2:	c6 2f       	mov	r28, r22
  d4:	80 54       	subi	r24, 0x40	; 64
  d6:	0e 94 36 00 	call	0x6c	; 0x6c <i2c_start_wait>
  da:	82 e4       	ldi	r24, 0x42	; 66
  dc:	0e 94 5a 00 	call	0xb4	; 0xb4 <i2c_write>
  e0:	cc 23       	and	r28, r28
  e2:	31 f0       	breq	.+12     	; 0xf0 <mcp4725_init+0x20>
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	0e 94 5a 00 	call	0xb4	; 0xb4 <i2c_write>
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	0e 94 5a 00 	call	0xb4	; 0xb4 <i2c_write>
  f0:	0e 94 54 00 	call	0xa8	; 0xa8 <i2c_stop>
  f4:	cf 91       	pop	r28
  f6:	08 95       	ret

000000f8 <mcp4725_setrawoutputfast>:
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	c6 2f       	mov	r28, r22
  fe:	d7 2f       	mov	r29, r23
 100:	80 54       	subi	r24, 0x40	; 64
 102:	0e 94 36 00 	call	0x6c	; 0x6c <i2c_start_wait>
 106:	8d 2f       	mov	r24, r29
 108:	0e 94 5a 00 	call	0xb4	; 0xb4 <i2c_write>
 10c:	8c 2f       	mov	r24, r28
 10e:	0e 94 5a 00 	call	0xb4	; 0xb4 <i2c_write>
 112:	0e 94 54 00 	call	0xa8	; 0xa8 <i2c_stop>
 116:	df 91       	pop	r29
 118:	cf 91       	pop	r28
 11a:	08 95       	ret

0000011c <mcp4725_setvoltagefast>:
 11c:	cf 92       	push	r12
 11e:	df 92       	push	r13
 120:	ef 92       	push	r14
 122:	ff 92       	push	r15
 124:	0f 93       	push	r16
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	c8 2f       	mov	r28, r24
 12c:	cb 01       	movw	r24, r22
 12e:	ba 01       	movw	r22, r20
 130:	68 01       	movw	r12, r16
 132:	79 01       	movw	r14, r18
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	40 e8       	ldi	r20, 0x80	; 128
 13a:	55 e4       	ldi	r21, 0x45	; 69
 13c:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
 140:	a7 01       	movw	r20, r14
 142:	96 01       	movw	r18, r12
 144:	0e 94 55 01 	call	0x2aa	; 0x2aa <__divsf3>
 148:	0e 94 c7 01 	call	0x38e	; 0x38e <__fixunssfsi>
 14c:	61 15       	cp	r22, r1
 14e:	80 e1       	ldi	r24, 0x10	; 16
 150:	78 07       	cpc	r23, r24
 152:	10 f0       	brcs	.+4      	; 0x158 <mcp4725_setvoltagefast+0x3c>
 154:	6f ef       	ldi	r22, 0xFF	; 255
 156:	7f e0       	ldi	r23, 0x0F	; 15
 158:	8c 2f       	mov	r24, r28
 15a:	0e 94 7c 00 	call	0xf8	; 0xf8 <mcp4725_setrawoutputfast>
 15e:	cf 91       	pop	r28
 160:	1f 91       	pop	r17
 162:	0f 91       	pop	r16
 164:	ff 90       	pop	r15
 166:	ef 90       	pop	r14
 168:	df 90       	pop	r13
 16a:	cf 90       	pop	r12
 16c:	08 95       	ret

0000016e <main>:

int main(void)
{
	uint8_t address = 0x60;  
	
	mcp4725_init(address, 0);
 16e:	60 e0       	ldi	r22, 0x00	; 0
 170:	80 e6       	ldi	r24, 0x60	; 96
 172:	0e 94 68 00 	call	0xd0	; 0xd0 <mcp4725_init>
	
	
	
    while (1) 
    {
		for (double voltage = 0.0; voltage <= 3.0; voltage += step) {
 176:	c1 2c       	mov	r12, r1
 178:	d1 2c       	mov	r13, r1
 17a:	76 01       	movw	r14, r12
 17c:	19 c0       	rjmp	.+50     	; 0x1b0 <main+0x42>
			mcp4725_setvoltagefast(address, voltage, dacref);
 17e:	03 e3       	ldi	r16, 0x33	; 51
 180:	13 e3       	ldi	r17, 0x33	; 51
 182:	23 e5       	ldi	r18, 0x53	; 83
 184:	30 e4       	ldi	r19, 0x40	; 64
 186:	b7 01       	movw	r22, r14
 188:	a6 01       	movw	r20, r12
 18a:	80 e6       	ldi	r24, 0x60	; 96
 18c:	0e 94 8e 00 	call	0x11c	; 0x11c <mcp4725_setvoltagefast>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 190:	8f e1       	ldi	r24, 0x1F	; 31
 192:	9e e4       	ldi	r25, 0x4E	; 78
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <main+0x26>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x2c>
 19a:	00 00       	nop
	
	
	
    while (1) 
    {
		for (double voltage = 0.0; voltage <= 3.0; voltage += step) {
 19c:	2a e0       	ldi	r18, 0x0A	; 10
 19e:	37 ed       	ldi	r19, 0xD7	; 215
 1a0:	43 e2       	ldi	r20, 0x23	; 35
 1a2:	5c e3       	ldi	r21, 0x3C	; 60
 1a4:	c7 01       	movw	r24, r14
 1a6:	b6 01       	movw	r22, r12
 1a8:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <__addsf3>
 1ac:	6b 01       	movw	r12, r22
 1ae:	7c 01       	movw	r14, r24
 1b0:	20 e0       	ldi	r18, 0x00	; 0
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	40 e4       	ldi	r20, 0x40	; 64
 1b6:	50 e4       	ldi	r21, 0x40	; 64
 1b8:	c7 01       	movw	r24, r14
 1ba:	b6 01       	movw	r22, r12
 1bc:	0e 94 50 01 	call	0x2a0	; 0x2a0 <__cmpsf2>
 1c0:	18 16       	cp	r1, r24
 1c2:	ec f6       	brge	.-70     	; 0x17e <main+0x10>
 1c4:	d8 cf       	rjmp	.-80     	; 0x176 <main+0x8>

000001c6 <__subsf3>:
 1c6:	50 58       	subi	r21, 0x80	; 128

000001c8 <__addsf3>:
 1c8:	bb 27       	eor	r27, r27
 1ca:	aa 27       	eor	r26, r26
 1cc:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <__addsf3x>
 1d0:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_round>
 1d4:	0e 94 23 02 	call	0x446	; 0x446 <__fp_pscA>
 1d8:	38 f0       	brcs	.+14     	; 0x1e8 <__addsf3+0x20>
 1da:	0e 94 2a 02 	call	0x454	; 0x454 <__fp_pscB>
 1de:	20 f0       	brcs	.+8      	; 0x1e8 <__addsf3+0x20>
 1e0:	39 f4       	brne	.+14     	; 0x1f0 <__addsf3+0x28>
 1e2:	9f 3f       	cpi	r25, 0xFF	; 255
 1e4:	19 f4       	brne	.+6      	; 0x1ec <__addsf3+0x24>
 1e6:	26 f4       	brtc	.+8      	; 0x1f0 <__addsf3+0x28>
 1e8:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_nan>
 1ec:	0e f4       	brtc	.+2      	; 0x1f0 <__addsf3+0x28>
 1ee:	e0 95       	com	r30
 1f0:	e7 fb       	bst	r30, 7
 1f2:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_inf>

000001f6 <__addsf3x>:
 1f6:	e9 2f       	mov	r30, r25
 1f8:	0e 94 42 02 	call	0x484	; 0x484 <__fp_split3>
 1fc:	58 f3       	brcs	.-42     	; 0x1d4 <__addsf3+0xc>
 1fe:	ba 17       	cp	r27, r26
 200:	62 07       	cpc	r22, r18
 202:	73 07       	cpc	r23, r19
 204:	84 07       	cpc	r24, r20
 206:	95 07       	cpc	r25, r21
 208:	20 f0       	brcs	.+8      	; 0x212 <__addsf3x+0x1c>
 20a:	79 f4       	brne	.+30     	; 0x22a <__addsf3x+0x34>
 20c:	a6 f5       	brtc	.+104    	; 0x276 <__addsf3x+0x80>
 20e:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <__fp_zero>
 212:	0e f4       	brtc	.+2      	; 0x216 <__addsf3x+0x20>
 214:	e0 95       	com	r30
 216:	0b 2e       	mov	r0, r27
 218:	ba 2f       	mov	r27, r26
 21a:	a0 2d       	mov	r26, r0
 21c:	0b 01       	movw	r0, r22
 21e:	b9 01       	movw	r22, r18
 220:	90 01       	movw	r18, r0
 222:	0c 01       	movw	r0, r24
 224:	ca 01       	movw	r24, r20
 226:	a0 01       	movw	r20, r0
 228:	11 24       	eor	r1, r1
 22a:	ff 27       	eor	r31, r31
 22c:	59 1b       	sub	r21, r25
 22e:	99 f0       	breq	.+38     	; 0x256 <__addsf3x+0x60>
 230:	59 3f       	cpi	r21, 0xF9	; 249
 232:	50 f4       	brcc	.+20     	; 0x248 <__addsf3x+0x52>
 234:	50 3e       	cpi	r21, 0xE0	; 224
 236:	68 f1       	brcs	.+90     	; 0x292 <__addsf3x+0x9c>
 238:	1a 16       	cp	r1, r26
 23a:	f0 40       	sbci	r31, 0x00	; 0
 23c:	a2 2f       	mov	r26, r18
 23e:	23 2f       	mov	r18, r19
 240:	34 2f       	mov	r19, r20
 242:	44 27       	eor	r20, r20
 244:	58 5f       	subi	r21, 0xF8	; 248
 246:	f3 cf       	rjmp	.-26     	; 0x22e <__addsf3x+0x38>
 248:	46 95       	lsr	r20
 24a:	37 95       	ror	r19
 24c:	27 95       	ror	r18
 24e:	a7 95       	ror	r26
 250:	f0 40       	sbci	r31, 0x00	; 0
 252:	53 95       	inc	r21
 254:	c9 f7       	brne	.-14     	; 0x248 <__addsf3x+0x52>
 256:	7e f4       	brtc	.+30     	; 0x276 <__addsf3x+0x80>
 258:	1f 16       	cp	r1, r31
 25a:	ba 0b       	sbc	r27, r26
 25c:	62 0b       	sbc	r22, r18
 25e:	73 0b       	sbc	r23, r19
 260:	84 0b       	sbc	r24, r20
 262:	ba f0       	brmi	.+46     	; 0x292 <__addsf3x+0x9c>
 264:	91 50       	subi	r25, 0x01	; 1
 266:	a1 f0       	breq	.+40     	; 0x290 <__addsf3x+0x9a>
 268:	ff 0f       	add	r31, r31
 26a:	bb 1f       	adc	r27, r27
 26c:	66 1f       	adc	r22, r22
 26e:	77 1f       	adc	r23, r23
 270:	88 1f       	adc	r24, r24
 272:	c2 f7       	brpl	.-16     	; 0x264 <__addsf3x+0x6e>
 274:	0e c0       	rjmp	.+28     	; 0x292 <__addsf3x+0x9c>
 276:	ba 0f       	add	r27, r26
 278:	62 1f       	adc	r22, r18
 27a:	73 1f       	adc	r23, r19
 27c:	84 1f       	adc	r24, r20
 27e:	48 f4       	brcc	.+18     	; 0x292 <__addsf3x+0x9c>
 280:	87 95       	ror	r24
 282:	77 95       	ror	r23
 284:	67 95       	ror	r22
 286:	b7 95       	ror	r27
 288:	f7 95       	ror	r31
 28a:	9e 3f       	cpi	r25, 0xFE	; 254
 28c:	08 f0       	brcs	.+2      	; 0x290 <__addsf3x+0x9a>
 28e:	b0 cf       	rjmp	.-160    	; 0x1f0 <__addsf3+0x28>
 290:	93 95       	inc	r25
 292:	88 0f       	add	r24, r24
 294:	08 f0       	brcs	.+2      	; 0x298 <__addsf3x+0xa2>
 296:	99 27       	eor	r25, r25
 298:	ee 0f       	add	r30, r30
 29a:	97 95       	ror	r25
 29c:	87 95       	ror	r24
 29e:	08 95       	ret

000002a0 <__cmpsf2>:
 2a0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <__fp_cmp>
 2a4:	08 f4       	brcc	.+2      	; 0x2a8 <__cmpsf2+0x8>
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	08 95       	ret

000002aa <__divsf3>:
 2aa:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__divsf3x>
 2ae:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_round>
 2b2:	0e 94 2a 02 	call	0x454	; 0x454 <__fp_pscB>
 2b6:	58 f0       	brcs	.+22     	; 0x2ce <__divsf3+0x24>
 2b8:	0e 94 23 02 	call	0x446	; 0x446 <__fp_pscA>
 2bc:	40 f0       	brcs	.+16     	; 0x2ce <__divsf3+0x24>
 2be:	29 f4       	brne	.+10     	; 0x2ca <__divsf3+0x20>
 2c0:	5f 3f       	cpi	r21, 0xFF	; 255
 2c2:	29 f0       	breq	.+10     	; 0x2ce <__divsf3+0x24>
 2c4:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_inf>
 2c8:	51 11       	cpse	r21, r1
 2ca:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_szero>
 2ce:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_nan>

000002d2 <__divsf3x>:
 2d2:	0e 94 42 02 	call	0x484	; 0x484 <__fp_split3>
 2d6:	68 f3       	brcs	.-38     	; 0x2b2 <__divsf3+0x8>

000002d8 <__divsf3_pse>:
 2d8:	99 23       	and	r25, r25
 2da:	b1 f3       	breq	.-20     	; 0x2c8 <__divsf3+0x1e>
 2dc:	55 23       	and	r21, r21
 2de:	91 f3       	breq	.-28     	; 0x2c4 <__divsf3+0x1a>
 2e0:	95 1b       	sub	r25, r21
 2e2:	55 0b       	sbc	r21, r21
 2e4:	bb 27       	eor	r27, r27
 2e6:	aa 27       	eor	r26, r26
 2e8:	62 17       	cp	r22, r18
 2ea:	73 07       	cpc	r23, r19
 2ec:	84 07       	cpc	r24, r20
 2ee:	38 f0       	brcs	.+14     	; 0x2fe <__divsf3_pse+0x26>
 2f0:	9f 5f       	subi	r25, 0xFF	; 255
 2f2:	5f 4f       	sbci	r21, 0xFF	; 255
 2f4:	22 0f       	add	r18, r18
 2f6:	33 1f       	adc	r19, r19
 2f8:	44 1f       	adc	r20, r20
 2fa:	aa 1f       	adc	r26, r26
 2fc:	a9 f3       	breq	.-22     	; 0x2e8 <__divsf3_pse+0x10>
 2fe:	35 d0       	rcall	.+106    	; 0x36a <__divsf3_pse+0x92>
 300:	0e 2e       	mov	r0, r30
 302:	3a f0       	brmi	.+14     	; 0x312 <__divsf3_pse+0x3a>
 304:	e0 e8       	ldi	r30, 0x80	; 128
 306:	32 d0       	rcall	.+100    	; 0x36c <__divsf3_pse+0x94>
 308:	91 50       	subi	r25, 0x01	; 1
 30a:	50 40       	sbci	r21, 0x00	; 0
 30c:	e6 95       	lsr	r30
 30e:	00 1c       	adc	r0, r0
 310:	ca f7       	brpl	.-14     	; 0x304 <__divsf3_pse+0x2c>
 312:	2b d0       	rcall	.+86     	; 0x36a <__divsf3_pse+0x92>
 314:	fe 2f       	mov	r31, r30
 316:	29 d0       	rcall	.+82     	; 0x36a <__divsf3_pse+0x92>
 318:	66 0f       	add	r22, r22
 31a:	77 1f       	adc	r23, r23
 31c:	88 1f       	adc	r24, r24
 31e:	bb 1f       	adc	r27, r27
 320:	26 17       	cp	r18, r22
 322:	37 07       	cpc	r19, r23
 324:	48 07       	cpc	r20, r24
 326:	ab 07       	cpc	r26, r27
 328:	b0 e8       	ldi	r27, 0x80	; 128
 32a:	09 f0       	breq	.+2      	; 0x32e <__divsf3_pse+0x56>
 32c:	bb 0b       	sbc	r27, r27
 32e:	80 2d       	mov	r24, r0
 330:	bf 01       	movw	r22, r30
 332:	ff 27       	eor	r31, r31
 334:	93 58       	subi	r25, 0x83	; 131
 336:	5f 4f       	sbci	r21, 0xFF	; 255
 338:	3a f0       	brmi	.+14     	; 0x348 <__divsf3_pse+0x70>
 33a:	9e 3f       	cpi	r25, 0xFE	; 254
 33c:	51 05       	cpc	r21, r1
 33e:	78 f0       	brcs	.+30     	; 0x35e <__divsf3_pse+0x86>
 340:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_inf>
 344:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_szero>
 348:	5f 3f       	cpi	r21, 0xFF	; 255
 34a:	e4 f3       	brlt	.-8      	; 0x344 <__divsf3_pse+0x6c>
 34c:	98 3e       	cpi	r25, 0xE8	; 232
 34e:	d4 f3       	brlt	.-12     	; 0x344 <__divsf3_pse+0x6c>
 350:	86 95       	lsr	r24
 352:	77 95       	ror	r23
 354:	67 95       	ror	r22
 356:	b7 95       	ror	r27
 358:	f7 95       	ror	r31
 35a:	9f 5f       	subi	r25, 0xFF	; 255
 35c:	c9 f7       	brne	.-14     	; 0x350 <__divsf3_pse+0x78>
 35e:	88 0f       	add	r24, r24
 360:	91 1d       	adc	r25, r1
 362:	96 95       	lsr	r25
 364:	87 95       	ror	r24
 366:	97 f9       	bld	r25, 7
 368:	08 95       	ret
 36a:	e1 e0       	ldi	r30, 0x01	; 1
 36c:	66 0f       	add	r22, r22
 36e:	77 1f       	adc	r23, r23
 370:	88 1f       	adc	r24, r24
 372:	bb 1f       	adc	r27, r27
 374:	62 17       	cp	r22, r18
 376:	73 07       	cpc	r23, r19
 378:	84 07       	cpc	r24, r20
 37a:	ba 07       	cpc	r27, r26
 37c:	20 f0       	brcs	.+8      	; 0x386 <__divsf3_pse+0xae>
 37e:	62 1b       	sub	r22, r18
 380:	73 0b       	sbc	r23, r19
 382:	84 0b       	sbc	r24, r20
 384:	ba 0b       	sbc	r27, r26
 386:	ee 1f       	adc	r30, r30
 388:	88 f7       	brcc	.-30     	; 0x36c <__divsf3_pse+0x94>
 38a:	e0 95       	com	r30
 38c:	08 95       	ret

0000038e <__fixunssfsi>:
 38e:	0e 94 4a 02 	call	0x494	; 0x494 <__fp_splitA>
 392:	88 f0       	brcs	.+34     	; 0x3b6 <__fixunssfsi+0x28>
 394:	9f 57       	subi	r25, 0x7F	; 127
 396:	98 f0       	brcs	.+38     	; 0x3be <__fixunssfsi+0x30>
 398:	b9 2f       	mov	r27, r25
 39a:	99 27       	eor	r25, r25
 39c:	b7 51       	subi	r27, 0x17	; 23
 39e:	b0 f0       	brcs	.+44     	; 0x3cc <__fixunssfsi+0x3e>
 3a0:	e1 f0       	breq	.+56     	; 0x3da <__fixunssfsi+0x4c>
 3a2:	66 0f       	add	r22, r22
 3a4:	77 1f       	adc	r23, r23
 3a6:	88 1f       	adc	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	1a f0       	brmi	.+6      	; 0x3b2 <__fixunssfsi+0x24>
 3ac:	ba 95       	dec	r27
 3ae:	c9 f7       	brne	.-14     	; 0x3a2 <__fixunssfsi+0x14>
 3b0:	14 c0       	rjmp	.+40     	; 0x3da <__fixunssfsi+0x4c>
 3b2:	b1 30       	cpi	r27, 0x01	; 1
 3b4:	91 f0       	breq	.+36     	; 0x3da <__fixunssfsi+0x4c>
 3b6:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__fp_zero>
 3ba:	b1 e0       	ldi	r27, 0x01	; 1
 3bc:	08 95       	ret
 3be:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <__fp_zero>
 3c2:	67 2f       	mov	r22, r23
 3c4:	78 2f       	mov	r23, r24
 3c6:	88 27       	eor	r24, r24
 3c8:	b8 5f       	subi	r27, 0xF8	; 248
 3ca:	39 f0       	breq	.+14     	; 0x3da <__fixunssfsi+0x4c>
 3cc:	b9 3f       	cpi	r27, 0xF9	; 249
 3ce:	cc f3       	brlt	.-14     	; 0x3c2 <__fixunssfsi+0x34>
 3d0:	86 95       	lsr	r24
 3d2:	77 95       	ror	r23
 3d4:	67 95       	ror	r22
 3d6:	b3 95       	inc	r27
 3d8:	d9 f7       	brne	.-10     	; 0x3d0 <__fixunssfsi+0x42>
 3da:	3e f4       	brtc	.+14     	; 0x3ea <__fixunssfsi+0x5c>
 3dc:	90 95       	com	r25
 3de:	80 95       	com	r24
 3e0:	70 95       	com	r23
 3e2:	61 95       	neg	r22
 3e4:	7f 4f       	sbci	r23, 0xFF	; 255
 3e6:	8f 4f       	sbci	r24, 0xFF	; 255
 3e8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ea:	08 95       	ret

000003ec <__fp_cmp>:
 3ec:	99 0f       	add	r25, r25
 3ee:	00 08       	sbc	r0, r0
 3f0:	55 0f       	add	r21, r21
 3f2:	aa 0b       	sbc	r26, r26
 3f4:	e0 e8       	ldi	r30, 0x80	; 128
 3f6:	fe ef       	ldi	r31, 0xFE	; 254
 3f8:	16 16       	cp	r1, r22
 3fa:	17 06       	cpc	r1, r23
 3fc:	e8 07       	cpc	r30, r24
 3fe:	f9 07       	cpc	r31, r25
 400:	c0 f0       	brcs	.+48     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 402:	12 16       	cp	r1, r18
 404:	13 06       	cpc	r1, r19
 406:	e4 07       	cpc	r30, r20
 408:	f5 07       	cpc	r31, r21
 40a:	98 f0       	brcs	.+38     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 40c:	62 1b       	sub	r22, r18
 40e:	73 0b       	sbc	r23, r19
 410:	84 0b       	sbc	r24, r20
 412:	95 0b       	sbc	r25, r21
 414:	39 f4       	brne	.+14     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 416:	0a 26       	eor	r0, r26
 418:	61 f0       	breq	.+24     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 41a:	23 2b       	or	r18, r19
 41c:	24 2b       	or	r18, r20
 41e:	25 2b       	or	r18, r21
 420:	21 f4       	brne	.+8      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 422:	08 95       	ret
 424:	0a 26       	eor	r0, r26
 426:	09 f4       	brne	.+2      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 428:	a1 40       	sbci	r26, 0x01	; 1
 42a:	a6 95       	lsr	r26
 42c:	8f ef       	ldi	r24, 0xFF	; 255
 42e:	81 1d       	adc	r24, r1
 430:	81 1d       	adc	r24, r1
 432:	08 95       	ret

00000434 <__fp_inf>:
 434:	97 f9       	bld	r25, 7
 436:	9f 67       	ori	r25, 0x7F	; 127
 438:	80 e8       	ldi	r24, 0x80	; 128
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	08 95       	ret

00000440 <__fp_nan>:
 440:	9f ef       	ldi	r25, 0xFF	; 255
 442:	80 ec       	ldi	r24, 0xC0	; 192
 444:	08 95       	ret

00000446 <__fp_pscA>:
 446:	00 24       	eor	r0, r0
 448:	0a 94       	dec	r0
 44a:	16 16       	cp	r1, r22
 44c:	17 06       	cpc	r1, r23
 44e:	18 06       	cpc	r1, r24
 450:	09 06       	cpc	r0, r25
 452:	08 95       	ret

00000454 <__fp_pscB>:
 454:	00 24       	eor	r0, r0
 456:	0a 94       	dec	r0
 458:	12 16       	cp	r1, r18
 45a:	13 06       	cpc	r1, r19
 45c:	14 06       	cpc	r1, r20
 45e:	05 06       	cpc	r0, r21
 460:	08 95       	ret

00000462 <__fp_round>:
 462:	09 2e       	mov	r0, r25
 464:	03 94       	inc	r0
 466:	00 0c       	add	r0, r0
 468:	11 f4       	brne	.+4      	; 0x46e <__fp_round+0xc>
 46a:	88 23       	and	r24, r24
 46c:	52 f0       	brmi	.+20     	; 0x482 <__fp_round+0x20>
 46e:	bb 0f       	add	r27, r27
 470:	40 f4       	brcc	.+16     	; 0x482 <__fp_round+0x20>
 472:	bf 2b       	or	r27, r31
 474:	11 f4       	brne	.+4      	; 0x47a <__fp_round+0x18>
 476:	60 ff       	sbrs	r22, 0
 478:	04 c0       	rjmp	.+8      	; 0x482 <__fp_round+0x20>
 47a:	6f 5f       	subi	r22, 0xFF	; 255
 47c:	7f 4f       	sbci	r23, 0xFF	; 255
 47e:	8f 4f       	sbci	r24, 0xFF	; 255
 480:	9f 4f       	sbci	r25, 0xFF	; 255
 482:	08 95       	ret

00000484 <__fp_split3>:
 484:	57 fd       	sbrc	r21, 7
 486:	90 58       	subi	r25, 0x80	; 128
 488:	44 0f       	add	r20, r20
 48a:	55 1f       	adc	r21, r21
 48c:	59 f0       	breq	.+22     	; 0x4a4 <__fp_splitA+0x10>
 48e:	5f 3f       	cpi	r21, 0xFF	; 255
 490:	71 f0       	breq	.+28     	; 0x4ae <__fp_splitA+0x1a>
 492:	47 95       	ror	r20

00000494 <__fp_splitA>:
 494:	88 0f       	add	r24, r24
 496:	97 fb       	bst	r25, 7
 498:	99 1f       	adc	r25, r25
 49a:	61 f0       	breq	.+24     	; 0x4b4 <__fp_splitA+0x20>
 49c:	9f 3f       	cpi	r25, 0xFF	; 255
 49e:	79 f0       	breq	.+30     	; 0x4be <__fp_splitA+0x2a>
 4a0:	87 95       	ror	r24
 4a2:	08 95       	ret
 4a4:	12 16       	cp	r1, r18
 4a6:	13 06       	cpc	r1, r19
 4a8:	14 06       	cpc	r1, r20
 4aa:	55 1f       	adc	r21, r21
 4ac:	f2 cf       	rjmp	.-28     	; 0x492 <__fp_split3+0xe>
 4ae:	46 95       	lsr	r20
 4b0:	f1 df       	rcall	.-30     	; 0x494 <__fp_splitA>
 4b2:	08 c0       	rjmp	.+16     	; 0x4c4 <__fp_splitA+0x30>
 4b4:	16 16       	cp	r1, r22
 4b6:	17 06       	cpc	r1, r23
 4b8:	18 06       	cpc	r1, r24
 4ba:	99 1f       	adc	r25, r25
 4bc:	f1 cf       	rjmp	.-30     	; 0x4a0 <__fp_splitA+0xc>
 4be:	86 95       	lsr	r24
 4c0:	71 05       	cpc	r23, r1
 4c2:	61 05       	cpc	r22, r1
 4c4:	08 94       	sec
 4c6:	08 95       	ret

000004c8 <__fp_zero>:
 4c8:	e8 94       	clt

000004ca <__fp_szero>:
 4ca:	bb 27       	eor	r27, r27
 4cc:	66 27       	eor	r22, r22
 4ce:	77 27       	eor	r23, r23
 4d0:	cb 01       	movw	r24, r22
 4d2:	97 f9       	bld	r25, 7
 4d4:	08 95       	ret

000004d6 <__mulsf3>:
 4d6:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__mulsf3x>
 4da:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_round>
 4de:	0e 94 23 02 	call	0x446	; 0x446 <__fp_pscA>
 4e2:	38 f0       	brcs	.+14     	; 0x4f2 <__mulsf3+0x1c>
 4e4:	0e 94 2a 02 	call	0x454	; 0x454 <__fp_pscB>
 4e8:	20 f0       	brcs	.+8      	; 0x4f2 <__mulsf3+0x1c>
 4ea:	95 23       	and	r25, r21
 4ec:	11 f0       	breq	.+4      	; 0x4f2 <__mulsf3+0x1c>
 4ee:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_inf>
 4f2:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_nan>
 4f6:	11 24       	eor	r1, r1
 4f8:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_szero>

000004fc <__mulsf3x>:
 4fc:	0e 94 42 02 	call	0x484	; 0x484 <__fp_split3>
 500:	70 f3       	brcs	.-36     	; 0x4de <__mulsf3+0x8>

00000502 <__mulsf3_pse>:
 502:	95 9f       	mul	r25, r21
 504:	c1 f3       	breq	.-16     	; 0x4f6 <__mulsf3+0x20>
 506:	95 0f       	add	r25, r21
 508:	50 e0       	ldi	r21, 0x00	; 0
 50a:	55 1f       	adc	r21, r21
 50c:	62 9f       	mul	r22, r18
 50e:	f0 01       	movw	r30, r0
 510:	72 9f       	mul	r23, r18
 512:	bb 27       	eor	r27, r27
 514:	f0 0d       	add	r31, r0
 516:	b1 1d       	adc	r27, r1
 518:	63 9f       	mul	r22, r19
 51a:	aa 27       	eor	r26, r26
 51c:	f0 0d       	add	r31, r0
 51e:	b1 1d       	adc	r27, r1
 520:	aa 1f       	adc	r26, r26
 522:	64 9f       	mul	r22, r20
 524:	66 27       	eor	r22, r22
 526:	b0 0d       	add	r27, r0
 528:	a1 1d       	adc	r26, r1
 52a:	66 1f       	adc	r22, r22
 52c:	82 9f       	mul	r24, r18
 52e:	22 27       	eor	r18, r18
 530:	b0 0d       	add	r27, r0
 532:	a1 1d       	adc	r26, r1
 534:	62 1f       	adc	r22, r18
 536:	73 9f       	mul	r23, r19
 538:	b0 0d       	add	r27, r0
 53a:	a1 1d       	adc	r26, r1
 53c:	62 1f       	adc	r22, r18
 53e:	83 9f       	mul	r24, r19
 540:	a0 0d       	add	r26, r0
 542:	61 1d       	adc	r22, r1
 544:	22 1f       	adc	r18, r18
 546:	74 9f       	mul	r23, r20
 548:	33 27       	eor	r19, r19
 54a:	a0 0d       	add	r26, r0
 54c:	61 1d       	adc	r22, r1
 54e:	23 1f       	adc	r18, r19
 550:	84 9f       	mul	r24, r20
 552:	60 0d       	add	r22, r0
 554:	21 1d       	adc	r18, r1
 556:	82 2f       	mov	r24, r18
 558:	76 2f       	mov	r23, r22
 55a:	6a 2f       	mov	r22, r26
 55c:	11 24       	eor	r1, r1
 55e:	9f 57       	subi	r25, 0x7F	; 127
 560:	50 40       	sbci	r21, 0x00	; 0
 562:	9a f0       	brmi	.+38     	; 0x58a <__mulsf3_pse+0x88>
 564:	f1 f0       	breq	.+60     	; 0x5a2 <__mulsf3_pse+0xa0>
 566:	88 23       	and	r24, r24
 568:	4a f0       	brmi	.+18     	; 0x57c <__mulsf3_pse+0x7a>
 56a:	ee 0f       	add	r30, r30
 56c:	ff 1f       	adc	r31, r31
 56e:	bb 1f       	adc	r27, r27
 570:	66 1f       	adc	r22, r22
 572:	77 1f       	adc	r23, r23
 574:	88 1f       	adc	r24, r24
 576:	91 50       	subi	r25, 0x01	; 1
 578:	50 40       	sbci	r21, 0x00	; 0
 57a:	a9 f7       	brne	.-22     	; 0x566 <__mulsf3_pse+0x64>
 57c:	9e 3f       	cpi	r25, 0xFE	; 254
 57e:	51 05       	cpc	r21, r1
 580:	80 f0       	brcs	.+32     	; 0x5a2 <__mulsf3_pse+0xa0>
 582:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_inf>
 586:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_szero>
 58a:	5f 3f       	cpi	r21, 0xFF	; 255
 58c:	e4 f3       	brlt	.-8      	; 0x586 <__mulsf3_pse+0x84>
 58e:	98 3e       	cpi	r25, 0xE8	; 232
 590:	d4 f3       	brlt	.-12     	; 0x586 <__mulsf3_pse+0x84>
 592:	86 95       	lsr	r24
 594:	77 95       	ror	r23
 596:	67 95       	ror	r22
 598:	b7 95       	ror	r27
 59a:	f7 95       	ror	r31
 59c:	e7 95       	ror	r30
 59e:	9f 5f       	subi	r25, 0xFF	; 255
 5a0:	c1 f7       	brne	.-16     	; 0x592 <__mulsf3_pse+0x90>
 5a2:	fe 2b       	or	r31, r30
 5a4:	88 0f       	add	r24, r24
 5a6:	91 1d       	adc	r25, r1
 5a8:	96 95       	lsr	r25
 5aa:	87 95       	ror	r24
 5ac:	97 f9       	bld	r25, 7
 5ae:	08 95       	ret

000005b0 <_exit>:
 5b0:	f8 94       	cli

000005b2 <__stop_program>:
 5b2:	ff cf       	rjmp	.-2      	; 0x5b2 <__stop_program>
